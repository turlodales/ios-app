# This file contains the fastlane.tools configuration

# update_fastlane # fastlane automatically update itself

default_platform(:ios)

platform :ios do

  desc "Push a new beta build to TestFlight"
   lane :beta do
     ensure_git_status_clean # Ensure that your git status is not dirty
     increment_build_number xcodeproj: "ownCloud.xcodeproj" # Automatically increase the build number
     commit_version_bump(xcodeproj: "ownCloud.xcodeproj") # Commit the version bump
     push_to_git_remote # Push the new commit and tag back to git remote
     build_app(scheme: "ownCloud") # Build scheme
     changelog_from_git_commits # Generate the changelog based on last commits
     upload_to_testflight(skip_waiting_for_build_processing: true) # Upload build to itunesconnnect

  end

  desc "Register new devices to Apple portal"
   lane :register_new_devices do
     register_devices(devices_file: "fastlane/Match/devices.txt") # Sync test devices from file to itunesconnect
     match(force_for_new_devices: true) # Creates all required certificates & provisioning profile
  end

  desc "Ad-Hoc Distribution IPA generation"
   lane :build_ipa_ad_hoc do
    #Create the build
    gym(
      workspace: "ownCloud.xcworkspace",
      scheme: "ownCloud",
      codesigning_identity: "iPhone Distribution: ownCloud GmbH (4AP2STM4H5)",
      export_method: "ad-hoc",
      export_options: {
        method: "ad-hoc",
        provisioningProfiles: {
          "com.owncloud.ios-app" => "match AdHoc com.owncloud.ios-app",
	        "com.owncloud.ios-app.ownCloud-File-Provider" => "match AdHoc com.owncloud.ios-app.ownCloud-File-Provider",
	        "com.owncloud.ios-app.ownCloud-File-ProviderUI" => "match AdHoc com.owncloud.ios-app.ownCloud-File-ProviderUI"
          #Add more Provisioning Profiles when extensions are added
        }
      }
    )
  end

  desc "Generate the screenshots for the AppStore"
    lane :screenshots do
      reset_simulators
      snapshot
      frameit(white: false, path: './fastlane/screenshots')
      deliver(
        skip_screenshots: false,
        skip_metadata: true,
        submit_for_review: false,
        ignore_language_directory_validation: true,
        skip_binary_upload: true,
        force: true,
        overwrite_screenshots: true,
        app_identifier: "com.owncloud.ios-app",
        skip_app_version_update: true
      )
    end

  desc "In-House Enterprise IPA generation"
   lane :build_ipa_enterprise_in_house do

    ENTERPRISE_APP_ID = "com.owncloud.enterprise.ios-app"
    ENTERPRISE_APP_PROFILE = "Enterprise Distribution iOS Neo"
    ENTERPRISE_FP_ID = "com.owncloud.enterprise.ios-app.ownCloud-File-Provider"
    ENTERPRISE_FP_PROFILE = "Enterprise Distribution iOS Neo File Provider"
    ENTERPRISE_FP_UI_ID = "com.owncloud.enterprise.ios-app.ownCloud-File-ProviderUI"
    ENTERPRISE_FP_UI_PROFILE = "Enterprise Distribution iOS Neo File ProviderUI"
    ENTERPRISE_APP_FW_ID = "com.owncloud.enterprise.ownCloudApp"
    ENTERPRISE_TEAM = "5QNK8L2PSC"
    ENTERPRISE_IDENTITY = "iPhone Distribution: ownCloud GmbH"

    update_app_identifier(
      xcodeproj: "ownCloud.xcodeproj",
      plist_path: "ownCloud/Resources/Info.plist",
      app_identifier: ENTERPRISE_APP_ID
    )

    update_app_identifier(
      xcodeproj: "ownCloud.xcodeproj",
      plist_path: "ownCloud File Provider/Info.plist",
      app_identifier: ENTERPRISE_FP_ID
    )

    update_app_identifier(
      xcodeproj: "ownCloud.xcodeproj",
      plist_path: "ownCloud File ProviderUI/Info.plist",
      app_identifier: ENTERPRISE_FP_UI_ID
    )

    update_app_identifier(
      xcodeproj: "ownCloud.xcodeproj",
      plist_path: "ownCloudAppFramework/Info.plist",
      app_identifier: ENTERPRISE_APP_FW_ID
    )

    update_app_group_identifiers(
      entitlements_file: "ownCloud/ownCloud.entitlements",
      app_group_identifiers: ["group.com.owncloud.enterprise.ios-app"]
    )

    update_app_group_identifiers(
      entitlements_file: "ownCloud File Provider/ownCloud_File_Provider.entitlements",
      app_group_identifiers: ["group.com.owncloud.enterprise.ios-app"]
    )

    set_info_plist_value(path: "ownCloud File Provider/Info.plist", key: "OCAppGroupIdentifier", value: "group.com.owncloud.enterprise.ios-app")
    set_info_plist_value(path: "ownCloud File Provider/Info.plist", key: "OCKeychainAccessGroupIdentifier", value: "group.com.owncloud.enterprise.ios-app")
    set_info_plist_value(path: "ownCloud File Provider/Info.plist", key: "NSExtension", subkey: "NSExtensionFileProviderDocumentGroup", value: "group.com.owncloud.enterprise.ios-app")

    automatic_code_signing(
      path: "ownCloud.xcodeproj",
      use_automatic_signing: false,
      team_id: ENTERPRISE_TEAM,
      code_sign_identity: ENTERPRISE_IDENTITY,
      profile_name: ENTERPRISE_APP_PROFILE,
      bundle_identifier: ENTERPRISE_APP_ID,
      targets: ["ownCloud"]
    )

    automatic_code_signing(
      path: "ownCloud.xcodeproj",
      use_automatic_signing: false,
      team_id: ENTERPRISE_TEAM,
      code_sign_identity: ENTERPRISE_IDENTITY,
      profile_name: ENTERPRISE_FP_PROFILE,
      bundle_identifier: ENTERPRISE_FP_ID,
      targets: ["ownCloud File Provider"]
    )

    automatic_code_signing(
      path: "ownCloud.xcodeproj",
      use_automatic_signing: false,
      team_id: ENTERPRISE_TEAM,
      code_sign_identity: ENTERPRISE_IDENTITY,
      profile_name: ENTERPRISE_FP_UI_PROFILE,
      bundle_identifier: ENTERPRISE_FP_UI_ID,
      targets: ["ownCloud File ProviderUI"]
    )

    automatic_code_signing(
      path: "ownCloud.xcodeproj",
      use_automatic_signing: false,
      team_id: ENTERPRISE_TEAM,
      code_sign_identity: ENTERPRISE_IDENTITY,
      bundle_identifier: ENTERPRISE_APP_FW_ID,
      targets: ["ownCloudApp"]
    )

    # Add a badge with the latest short commit hash to the app icon
    commit = last_git_commit
    short_hash = commit[:abbreviated_commit_hash] # short sha of commit
    add_badge(shield: "Bitrise-" + short_hash + "-blue", no_badge: true)

    #Create the build
    gym(
      workspace: "ownCloud.xcworkspace",
      scheme: "ownCloud",
      configuration: "Debug",
      codesigning_identity: ENTERPRISE_IDENTITY,
      export_method: "enterprise",
      export_options: {
        method: "enterprise",
        provisioningProfiles: {
          ENTERPRISE_APP_ID => ENTERPRISE_APP_PROFILE,
	        ENTERPRISE_FP_ID => ENTERPRISE_FP_PROFILE,
	        ENTERPRISE_FP_UI_ID => ENTERPRISE_FP_UI_PROFILE
        }
      }
    )
  end

end
